#!/usr/bin/env groovy

pipeline {
    agent any
    tools {
        maven 'my-maven'
    }    
    stages {
        stage('increment version') {
            steps {
                script {
                    echo "incrementing app version....."
                    sh 'mvn build-helper:parse-version versions:set -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} versions:commit'
                    def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                    def version = matcher[0][1]
                    env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                }
            }
        }
        stage('build app') {
            steps {
                script {
                    echo "Building the application....."
                    sh 'mvn clean package'
                }
            }
        }
        stage('build image') {
            steps {
                script {
                    echo "Building the docker image..."
                    withCredentials ([usernamePassword(credentialsId: 'sk-dockerhub-cred', passwordVariable:'PASS', usernameVariable: 'USER')]) {
                       sh "docker build -t vsrujan/demo-app:${IMAGE_NAME} ."
                       sh "echo $PASS | docker login -u $USER --password-stdin"
                       sh "docker push vsrujan/demo-app:${IMAGE_NAME}" }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    env.IMAGE = "vsrujan/demo-app:${IMAGE_NAME}"
                    echo "Deploying docker image..."
                    def dockerComposeCmd = "docker-compose -f docker-compose.yaml up --detach"
                    sshagent(['EC2-server-key']) {
                        sh "scp docker-compose.yaml ec2-user@54.242.59.142:/home/ec2-user"
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@54.242.59.142 ${dockerComposeCmd}"
                    }
                }
            }
        }
        stage('commit version update') {
            steps {
                script {
                    withCredentials ([usernamePassword(credentialsId: 'jenkins-github', passwordVariable:'PASS', usernameVariable: 'USER')]) {

                        sh 'git status'
                        sh 'git branch'
                        sh 'git config --list'
                        sh "git remote set-url origin https://${USER}:${PASS}@github.com/srujanvk/java-maven-app.git"
                        sh 'git add .'
                        sh 'git commit -m "ci: version bump"'
                        sh 'git push origin HEAD:jenkins-jobs'
                     }
                 }
            }
        }
    }
}
